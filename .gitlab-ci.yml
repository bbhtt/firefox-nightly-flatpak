include:
  - https://gitlab.gnome.org/GNOME/citemplates/raw/master/flatpak/flatpak_ci_initiative.yml
  - https://gitlab.com/accessable-net/gitlab-ci-templates/raw/master/pages.yml

variables:
  MANIFEST_PATH: $CI_PROJECT_DIR/org.mozilla.FirefoxNightly.yaml
  BUNDLE: "org.mozilla.FirefoxNightly.flatpak"

  DOCKER_REGISTRY: "registry.gitlab.com/freedesktop-sdk/infrastructure/freedesktop-sdk-docker-images"
  DOCKER_IMAGE_ID: "latest"
  DOCKER_AMD64: "${DOCKER_REGISTRY}/bst16/amd64:${DOCKER_IMAGE_ID}"
  DOCKER_AARCH64: "${DOCKER_REGISTRY}/bst16/arm64:${DOCKER_IMAGE_ID}"
  DOCKER_PPC64LE: "${DOCKER_REGISTRY}/bst16/ppc64le:${DOCKER_IMAGE_ID}"
  SCHEDULE_TASK: default

update-sources:
  stage: build
  image:
    name: ghcr.io/flathub/flatpak-external-data-checker
    # Open shell rather than the bin
    entrypoint: [""]
  before_script:
    - git config --global user.name "${GITLAB_USER_LOGIN}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
  script:
    - /app/flatpak-external-data-checker --update --commit-only $MANIFEST_PATH

    - git push -o merge_request.create -o merge_request.target=master -o merge_request.merge_when_pipeline_succeeds
      "https://${GITLAB_USER_NAME}:${CI_GIT_TOKEN}@${CI_REPOSITORY_URL#*@}"
  artifacts:
    paths:
      - $MANIFEST_PATH
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - when: never

flatpak:
  dependencies:
    - update-sources
  image: ${DOCKER_AMD64}
  variables:
    RUNTIME_REPO: "https://flathub.org/repo/flathub.flatpakrepo"
    FLATPAK_MODULE: "firefox-nightly"
    APP_ID: "org.mozilla.FirefoxNightly"
    RUNTIME_VRESION: "20.08"
  before_script:
    # GPG noninteractive passphase
    - gpg --list-keys --with-keygrip # init gpg
    - echo "allow-preset-passphrase" >> ~/.gnupg/gpg-agent.conf
    - gpg-connect-agent reloadagent /bye
    - cat $GPG_PASSPHRASE | /usr/libexec/gpg-preset-passphrase --preset $GPG_KEY_GREP
    - gpg --import --batch ${GPG_PRIVATE_KEY}

    # Add dependent sdk
    - flatpak remote-add --user --if-not-exists flathub ${RUNTIME_REPO}
    - flatpak install --user --noninteractive
      org.freedesktop.Platform//${RUNTIME_VRESION}
      org.freedesktop.Platform.ffmpeg-full//${RUNTIME_VRESION}
      org.freedesktop.Sdk//${RUNTIME_VRESION}
      org.mozilla.firefox.BaseApp//${RUNTIME_VRESION}
  script:
    - flatpak-builder build --gpg-sign=${GPG_KEY_ID} --disable-rofiles-fuse --repo=repo ${BRANCH:+--default-branch=$BRANCH} ${MANIFEST_PATH}

    # Generate a Flatpak bundle
    - flatpak build-bundle --gpg-sign=${GPG_KEY_ID} repo ${BUNDLE} --runtime-repo=${RUNTIME_REPO} ${APP_ID} ${BRANCH}

    - flatpak build-update-repo --gpg-sign=${GPG_KEY_ID} --generate-static-deltas repo/
  artifacts:
    paths:
      - repo
  tags: [""]
  extends: .flatpak
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: always

pages:
  variables:
    BUILD_OUTPUT_PATH: ${CI_PROJECT_DIR}/repo
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: always
